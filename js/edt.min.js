var edt;
var editor;
var X, Y;
var wrk, pars;
var globrange;
function LabeleDit(c) {
	var b = this;
	this.editor = c;
	editor = c;
	this.id = c.id;
	this.inputFile = document.createElement("input");
	this.inputFile.setAttribute("type", "file");
	this.inputFile.setAttribute("id", "infile");
	var a = null;
	this.inputFile.onchange = function () {
		a = new FileReader();
		a.onload = function () {b.html(this.result)};
		a.readAsText(this.files[0])
	};
	this.saveInt = 0
}
LabeleDit.prototype.text = function (a) {if (a === undefined) {return this.editor.innerText} else {if (typeof(a) == "string") {this.editor.innerText = a} else {try {this.editor.innerText = a.innerText} catch (b) {log("ERR: " + b.message)}}}};
LabeleDit.prototype.html = function (a) {if (a === undefined) {return this.editor.innerHTML} else {if (typeof(a) == "string") {this.editor.innerHTML = a} else {try {this.editor.innerHTML = a.innerHTML} catch (b) {console.log("ERR: " + b.message)}}}};
LabeleDit.prototype.setSelStyle = function (d) {
	var c = window.getSelection();
	if (c.rangeCount) {
		var b = c.getRangeAt(0);
		var a = document.createElement(d);
		a.appendChild(b.extractContents());
		b.insertNode(a)
	}
};
LabeleDit.prototype.nou = function () {this.html("")};
LabeleDit.prototype.saveBuff = function () {
	var b = this.html().replace(/(\r\n|\n|\r)/gm, "");
	var c = new Blob([b], {type: "text/html"});
	var d = "myfile";
	var a = document.createElement("a");
	a.download = d;
	if (window.webkitURL != null) {a.href = window.webkitURL.createObjectURL(c)} else {
		a.href = window.URL.createObjectURL(c);
		a.onclick = function () {a.parentNode.removeChild(a)};
		a.style.display = "none";
		document.body.appendChild(a)
	}
	a.click()
};
LabeleDit.prototype.saveToLoco = function () {localStorage.setItem("labeledit", this.html().replace(/(\r\n|\n|\r)/gm, ""))};
LabeleDit.prototype.loadFromLoco = function () {this.html(localStorage.getItem("labeledit"))};
LabeleDit.prototype.loadFile = function () {this.inputFile.click()};
LabeleDit.prototype.test = function () {
	document.execCommand("insertImage", false, "file:///home/cosmin/Downloads/motren.jpg");
	document.execCommand("enableObjectResizing", true, true)
};
LabeleDit.prototype.selectAll = function () {
	window.getSelection().removeAllRanges();
	var a = document.createRange();
	a.selectNodeContents(this.editor);
	window.getSelection().addRange(a)
};
LabeleDit.prototype.deSelect = function () {window.getSelection().removeAllRanges()};
LabeleDit.prototype.onKey = function (a) {
	console.log(a.which);
	if (a.which == 9) {
		document.execCommand("insertHTML", false, "&nbsp;&nbsp;&nbsp;&nbsp;");
		a.preventDefault()
	}
};
LabeleDit.prototype.getCaretPos = function () {
	var b = window.getSelection().getRangeAt(0);
	var a = b.cloneRange();
	a.selectNodeContents(this.editor);
	a.setEnd(b.endContainer, b.endOffset);
	globrange = a;
	return a.toString().length
};
function hasFileApi() {return window.File && window.FileReader && window.FileList && window.Blob}
function platform() {return(navigator.appVersion.indexOf("Win") != -1) ? "win" : (navigator.appVersion.indexOf("Linux") != -1) ? "linux" : (navigator.appVersion.indexOf("Mac") != -1) ? "mac" : (navigator.appVersion.indexOf("X11") != -1) ? "unix" : "unknown"}
function log(b) {for (var c = -1; ++c < arguments.length;) {console.log(c + " > " + arguments[c])}}
window.onload = function () {
	X = window.innerWidth;
	Y = window.innerHeight;
	edt = new LabeleDit(document.getElementsByClassName("textarea")[0]);
	edt.editor.designMode = "on";
	edt.editor.addEventListener("contextmenu", function (b) {
		var d = document.getElementById("tb1");
		d.style.display = "block";
		var a = d.clientWidth;
		var c = d.clientHeight;
		d.style.left = (b.pageX + a < X) ? b.pageX + 10 + "px" : b.pageX - a - 10 + "px";
		d.style.top = (b.pageY + c < Y) ? b.pageY + "px" : Y - c - 5 + "px";
		b.preventDefault();
		return false
	});
	edt.editor.addEventListener("click", function () {document.getElementById("tb1").style.display = "none"});
	edt.loadFromLoco();
	edt.saveInt = window.setInterval("editor.saveToLoco()", 5000);
	wrk = new Worker("js/worker.js");
	wrk.addEventListener("message", function (a) {
		var c = window.getSelection();
		var b = c.getRangeAt(0);
		edt.html(a.data);
		c.removeAllRanges();
		c.addRange(b)
	}, false)
};
window.onresize = function () {
	X = window.innerWidth;
	Y = window.innerHeight
};
function setFontFam() {
	var d = platform();
	var c;
	c = [" serif", " Arial", " Arial Black", " Arial Narrow", " Book Antiqua", " Courier New", " Fixedsys", " Magneto", " Microsoft Sans Serif", " Palatino Linotype", " Tahoma"];
	var a = document.getElementById("selFF");
	var f;
	var b = 0;
	for (var e in c) {
		f = document.createElement("option");
		f.innerText = c[e];
		f.value = c[e];
		f.style.fontFamily = c[e];
		a.appendChild(f);
		a.options[b++].style.fontFamily = c[e]
	}
	a.options[2].style.color = "#f00"
};
